{"version":3,"sources":["components/Search.js","components/Directory.js","App.js","reportWebVitals.js","index.js"],"names":["Search","props","handleClick","bind","event","preventDefault","search","document","querySelector","this","searchHandler","value","type","className","placeholder","onClick","Component","Directory","state","employees","originalList","sortArray","sortByName","searchByName","fetch","then","res","json","setState","results","arr","sort","a","b","keyA","name","first","keyB","sortedEmployee","searchResults","filter","employee","toUpperCase","employeeTable","map","index","src","picture","thumbnail","last","email","phone","scope","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"8PAwBeA,E,kDArBb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDC,YAAc,EAAKA,YAAYC,KAAjB,gBAFH,E,wDAKNC,GACVA,EAAMC,iBACN,IAAIC,EAASC,SAASC,cAAc,cACpCC,KAAKR,MAAMS,cAAcJ,EAAOK,S,+BAIhC,OACE,gCACE,uBAAOC,KAAK,OAAOC,UAAU,YAAYC,YAAY,yBACrD,wBAAQF,KAAK,SAASC,UAAU,YAAYE,QAAUN,KAAKP,YAA3D,2B,GAhBac,aCsFNC,E,kDAnFX,WAAYhB,GAAQ,IAAD,8BACf,cAAMA,IACDiB,MAAQ,CACTC,UAAW,GACXC,aAAc,IAElB,EAAKC,UAAY,EAAKA,UAAUlB,KAAf,gBACjB,EAAKmB,WAAa,EAAKA,WAAWnB,KAAhB,gBAClB,EAAKoB,aAAe,EAAKA,aAAapB,KAAlB,gBARL,E,gEAYE,IAAD,OAChBqB,MAAM,gFACDC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GACF,EAAKC,SAAS,CAAET,UAAW,EAAKE,UAAUM,EAAKE,WAC/C,EAAKD,SAAS,CAAER,aAAc,EAAKC,UAAUM,EAAKE,gB,gCAIpDC,GACN,OAAOA,EAAIC,MAAK,SAACC,EAAGC,GAChB,IAAIC,EAAOF,EAAEG,KAAKC,MACdC,EAAOJ,EAAEE,KAAKC,MAElB,OAAIF,EAAOG,GAAc,EACrBH,EAAOG,EAAa,EACjB,O,mCAKX,IAAIC,EAAiB7B,KAAKY,UAAUZ,KAAKS,MAAMC,WAC/CV,KAAKmB,SAAS,CAAET,UAAWmB,M,mCAGlBH,GACT,GAAKA,EAAL,CAIA,IAAII,EAAgB9B,KAAKS,MAAMC,UAAUqB,QAAO,SAAAC,GAC5C,OAAQA,EAASN,KAAKC,MAAMM,gBAAkBP,EAAKO,iBAEvDjC,KAAKmB,SAAS,CAAET,UAAWoB,SANvB9B,KAAKmB,SAAS,CAAET,UAAWV,KAAKS,MAAME,iB,+BAW1C,IAAIuB,EAAgBlC,KAAKS,MAAMC,UAAUyB,KAAI,SAACH,EAAUI,GACpD,OAEI,+BACI,6BAAI,qBAAKC,IAAML,EAASM,QAAQC,cAChC,yCAASP,EAASN,KAAKC,MAAvB,YAAkCK,EAASN,KAAKc,MAAhD,OACA,+BAAMR,EAASS,MAAf,OACA,+BAAMT,EAASU,MAAf,SAJKN,MAQjB,OAEI,sBAAKhC,UAAU,YAAf,UACI,cAAC,EAAD,CAAQH,cAAgBD,KAAKc,eAC7B,wBAAOV,UAAU,QAAjB,UACI,uBAAOA,UAAU,QAAjB,SACI,+BACI,oBAAIuC,MAAM,MAAV,uBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,oBACA,oBAAIA,MAAM,MAAV,yBAGR,gCACMT,c,GA5EF3B,aCSTqC,G,MARH,WACV,OACE,qBAAKxC,UAAU,MAAf,SACI,cAAC,EAAD,QCIOyC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/B,MAAK,YAAkD,IAA/CgC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFzD,SAAS0D,eAAe,SAM1BX,M","file":"static/js/main.409d79b9.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Search extends Component {\n  constructor(props){\n    super(props);\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n  handleClick(event){\n    event.preventDefault();\n    let search = document.querySelector('.searchbar');\n    this.props.searchHandler(search.value)\n  }\n\n  render() {\n    return (\n      <div>\n        <input type='text' className='searchbar' placeholder='Search by first name'/>\n        <button type='button' className='searchbtn' onClick={ this.handleClick }>Search</button>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React from 'react';\nimport { Component } from 'react';\nimport Search from './Search';\n\nclass Directory extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            employees: [],\n            originalList: []\n        }\n        this.sortArray = this.sortArray.bind(this);\n        this.sortByName = this.sortByName.bind(this);\n        this.searchByName = this.searchByName.bind(this);\n    }\n\n\n    componentDidMount() {\n        fetch(`https://randomuser.me/api/?results=25&nat=us&inc=name,email,phone,id,picture`)\n            .then(res => res.json())\n            .then(json => {\n                this.setState({ employees: this.sortArray(json.results) })\n                this.setState({ originalList: this.sortArray(json.results) })\n            })\n    };\n\n    sortArray(arr) {\n        return arr.sort((a, b) => {\n            let keyA = a.name.first,\n                keyB = b.name.first;\n\n            if (keyA < keyB) return -1;\n            if (keyA > keyB) return 1;\n            return 0\n        });\n    }\n\n    sortByName() {\n        let sortedEmployee = this.sortArray(this.state.employees);\n        this.setState({ employees: sortedEmployee });\n    }\n\n    searchByName(name) {\n        if (!name) {\n            this.setState({ employees: this.state.originalList });\n            return;\n        }\n        let searchResults = this.state.employees.filter(employee => {\n            return (employee.name.first.toUpperCase() === name.toUpperCase())\n        })\n        this.setState({ employees: searchResults });\n    }\n\n\n    render() {\n        let employeeTable = this.state.employees.map((employee, index) => {\n            return (\n\n                <tr key={index}>\n                    <td><img src={ employee.picture.thumbnail } /></td>\n                    <td>{`${ employee.name.first } ${ employee.name.last }`} </td>\n                    <td>{ employee.email } </td>\n                    <td>{ employee.phone } </td>\n                </tr>\n            )\n        })\n        return (\n\n            <div className='Container'>\n                <Search searchHandler={ this.searchByName } />\n                <table className='table'>\n                    <thead className='thead'>\n                        <tr>\n                            <th scope='col'>Headshot </th>\n                            <th scope='col'>Name </th>\n                            <th scope='col'>Email </th>\n                            <th scope='col'>Phone </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        { employeeTable }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nexport default Directory;\n\n\n\n","import React from 'react';\nimport Directory from './components/Directory';\n\nimport './App.css'\n\nconst App = () => {\n  return(\n    <div className='App'>\n        <Directory />\n    </div>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}